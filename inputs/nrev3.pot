main = case xs of
          Nil -> Nil
	    | Cons(x,xs) -> f xs (\xs -> last x xs);
f xs g = case xs of
            Nil -> Nil
	      | Cons(x,xs) -> Cons(g xs,f xs (\xs->g xs));
last b bs = case bs of
		       Nil -> b
		     | Cons(c,cs) -> last c cs;
secondlast a b bs = case bs of
                       Nil -> a
					 | Cons(c,cs) -> secondlast b c cs